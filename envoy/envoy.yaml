static_resources:
  listeners:
  - name: main
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: web_service
          http_filters:
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication"
              providers:
                jwt_auth:
                  remote_jwks:
                    http_uri:
                      uri: https://CHANGE-ME-DOMAIN--------------------------/.well-known/jwks.json
                      cluster: identity_provider
                      timeout: 2s
                    cache_duration:
                      seconds: 300
                  from_headers:
                  - name: Authorization
                    value_prefix: "Bearer "
                  payload_in_metadata: jwt_payload
              rules:
              - match:
                  prefix: "/healthz"
              - match:
                  prefix: "/"
                requires:
                  provider_name: jwt_auth
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                -- character table string
                local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
                -- encoding
                function enc(data)
                    return ((data:gsub('.', function(x) 
                        local r,b='',x:byte()
                        for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
                        return r;
                    end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
                        if (#x < 6) then return '' end
                        local c=0
                        for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
                        return b:sub(c+1,c+1)
                    end)..({ '', '==', '=' })[#data%3+1])
                end
                
                function envoy_on_request(request_handle)
                  local user
                  local meta = request_handle:streamInfo():dynamicMetadata()
                  for key, value in pairs(meta) do
                    request_handle:headers():add("jwt-extracted-user", value.jwt_payload.iss)
                    user = value.jwt_payload.iss
                  end
                  local body = request_handle:body()
                  local body_size = body:length()
                  local body_bytes = body:getBytes(0, body_size)
                  local enc_body = enc(tostring(body_bytes))
                  local log_event = [[{"type":"audit_log]] .. 
                      [[","timestamp":"]] .. request_handle:timestamp() .. 
                      [[","authority":"]] .. request_handle:headers():get(":authority") .. 
                      [[","method":"]] .. request_handle:headers():get(":method") .. 
                      [[","path":"]] .. request_handle:headers():get(":path") .. 
                      [[","scheme":"]] .. request_handle:headers():get(":scheme") .. 
                      [[","user":"]] .. user ..
                      [[","body":"]] ..enc_body.. [["}]]
                  print(log_event)
                end
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: web_service
    type: STRICT_DNS  # static
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: web_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: web_service
                port_value: 8080
  - name: identity_provider
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: identity_provider
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: CHANGE-ME-DOMAIN--------------------------
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: CHANGE-ME-DOMAIN--------------------------
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: /etc/ssl/certs/ca-certificates.crt